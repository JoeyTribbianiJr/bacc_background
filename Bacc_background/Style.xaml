<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Bacc_background">

    <Style x:Key="GreenButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="lightblue"></Setter>
        <Setter Property="FontSize" Value="22"></Setter>
        <Setter Property="FontWeight" Value="Heavy"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="bdr"
                            CornerRadius="3" Opacity="0.5" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                        <!--可使用ContentPresenter代替-->
                        <!--Foreground的值White可以替换为{TemplateBinding Foreground}-->
                        <Label VerticalContentAlignment="Center" HorizontalContentAlignment="Center" 
                               Foreground="{TemplateBinding Foreground}"
                               Content="{TemplateBinding Content}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard >
                                    <Storyboard>
                                        <DoubleAnimation To="0.7"  Duration="0:0:0.2" Storyboard.TargetName="bdr" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard >
                                    <Storyboard>
                                        <DoubleAnimation To="0.5"  Duration="0:0:0.2" Storyboard.TargetName="bdr"  Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ChipButton" TargetType="Button">
        <Setter Property="Width" Value="70"/>
        <Setter Property="Height" Value="70"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontStretch" Value="Medium" />
        <Setter Property="FontWeight" Value="Heavy" />

        <Setter Property="Content" >
            <Setter.Value>
                <Binding Path="." ></Binding>
            </Setter.Value>
        </Setter>
        <Setter Property="Visibility" >
            <Setter.Value>
                <Binding Path="." Converter="{StaticResource ChipVisibleConverter}"></Binding>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" >
            <Setter.Value>
                <ImageBrush >
                    <ImageBrush.ImageSource >
                        <Binding  Path="."  Converter="{StaticResource ChipBackgroundConverter}"></Binding>
                    </ImageBrush.ImageSource>
                </ImageBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}">

                            <ContentPresenter Name="BtnContent"
											  Margin="{TemplateBinding Content,Converter={StaticResource ChipTextMarginConverter}}"
											  HorizontalAlignment="Center"
											  Content="{TemplateBinding Content}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BetChipButton" TargetType="Button">
        <Setter Property="Width" Value="37"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="10" />
        <Setter Property="FontStretch" Value="Medium" />
        <Setter Property="FontWeight" Value="Black" />

        <Setter Property="Content" >
            <Setter.Value>
                <Binding Path="." ></Binding>
            </Setter.Value>
        </Setter>

        <Setter Property="Visibility" >
            <Setter.Value>
                <Binding Path="." Converter="{StaticResource ChipVisibleConverter}"></Binding>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" >
            <Setter.Value>
                <ImageBrush ImageSource="Img/bet.bmp">
                </ImageBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}">

                            <!--Margin="{TemplateBinding Content,Converter={StaticResource ChipTextMarginConverter}}"-->
                            <ContentPresenter Name="BtnContent"
											  VerticalAlignment="Center"
											  HorizontalAlignment="Center"
											  Content="{TemplateBinding Content}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--大路单按钮样式-->
    <Style x:Key="WaybillBlock" TargetType="Button">
        <Setter Property="Width" Value="20.5"></Setter>
        <Setter Property="Height" Value="20.5"></Setter>
        <Setter Property="FontFamily" Value="宋体"></Setter>
        <Setter Property="FontSize" Value="17"></Setter>
        <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Background" >
            <Setter.Value>
                <Binding Path="." Converter="{StaticResource WayBillBackgroundConverter}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Content" >
            <Setter.Value>
                <Binding Path="." Converter="{StaticResource WayBillContentConverter}"></Binding>
            </Setter.Value>
        </Setter>
        <Setter Property="Visibility" >
            <Setter.Value>
                <Binding Path="." Converter="{StaticResource WayBillVisibleConverter}"></Binding>
            </Setter.Value>
        </Setter>
    </Style>
    <!--小路单按钮样式-->
    <Style x:Key="SmallWaybillButton" TargetType="Button">
        <Setter Property="Width" Value="7"></Setter>
        <Setter Property="Height" Value="7"></Setter>
        <Setter Property="FontFamily" Value="宋体"></Setter>
        <Setter Property="FontSize" Value="17"></Setter>
        <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Content" Value=""></Setter>
        <Setter Property="Background" >
            <Setter.Value>
                <Binding Path="." Converter="{StaticResource WayBillBackgroundConverter}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Visibility" >
            <Setter.Value>
                <Binding Path="." Converter="{StaticResource WayBillVisibleConverter}" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DataGridRowStyle1" TargetType="{x:Type DataGridRow}">
        <Setter Property="Foreground" Value="#FFB3B3B3"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template" Value="{DynamicResource DataGridRowControlTemplate1}"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#FF262626"/>
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                <Setter Property="Background" Value="#FF383838"/>
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background" Value="#FF333333"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="CardButton1" TargetType="Button">
        <!--<Setter Property="Width" Value="88"/>
        <Setter Property="Height" Value="121"/>-->
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontStretch" Value="Medium" />
        <Setter Property="FontWeight" Value="Heavy" />
        <Setter Property="Canvas.Top" Value="300" />
        <Setter Property="Canvas.Left" Value="460" />
        <Setter Property="Content" >
            <Setter.Value>
                <Binding Path="." ></Binding>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" >
            <Setter.Value>
                <ImageBrush ImageSource="Img/card/back.bmp" >
                    <ImageBrush.RelativeTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </ImageBrush.RelativeTransform>
                </ImageBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Width="66" Height="88">
                        <Border Background="{TemplateBinding Background}"></Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="listBoxTemplateInt">
        <StackPanel Margin="2">
            <DockPanel>
                <ComboBox ItemsSource="{Binding Value.Values}" Width="130"
							  SelectedIndex="{Binding Value.SelectedIndex,Mode=TwoWay}" 
							  ></ComboBox>
            </DockPanel>
        </StackPanel>
    </DataTemplate>

    <Style x:Key="AnimatedButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle Name="outline" RadiusX="9" RadiusY="9" Stroke="Black"  
                                       Fill="{TemplateBinding Background}" StrokeThickness="1.6"></Rectangle>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.3" AutoReverse="True" Storyboard.TargetProperty="(Rectangle.StrokeThickness)"  
                                                             Storyboard.TargetName="outline" By="1.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--按钮资源样式-->
    <!--立体按钮样式-->
    <Style x:Key="GoodButton" TargetType="Button">
        <Setter Property="Foreground" Value="Black"/>
        <!--修改模板属性-->
        <Setter Property="Template">
            <Setter.Value>
                <!--控件模板-->
                <ControlTemplate TargetType="Button">
                    <!--背景色-->
                    <Border x:Name="back" Opacity="0.8" CornerRadius="3">
                        <Border.BitmapEffect>
                            <OuterGlowBitmapEffect Opacity="0.7" GlowSize="0" GlowColor="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Button.Background).(SolidColorBrush.Color)}" />
                        </Border.BitmapEffect>
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1.5">
                                <GradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Button.Background).(SolidColorBrush.Color)}" Offset="0"/>
                                        <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Button.Background).(SolidColorBrush.Color)}" Offset="0.4"/>
                                        <GradientStop Color="#FFF" Offset="1"/>
                                    </GradientStopCollection>
                                </GradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.Background>
                        <!--前景色及边框-->
                        <Border x:Name="fore" BorderThickness="1" CornerRadius="3" BorderBrush="#5555">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="#6FFF" Offset="0.5"/>
                                            <GradientStop Color="#1111" Offset="0.51"/>
                                        </GradientStopCollection>
                                    </GradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <!--按钮内容-->
                            <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding  Content}">
                                <ContentPresenter.BitmapEffect>
                                    <DropShadowBitmapEffect Color="#000" Direction="-90" ShadowDepth="2" Softness="0.1" Opacity="0.3" />
                                </ContentPresenter.BitmapEffect>
                            </ContentPresenter>
                        </Border>
                    </Border>
                    <!--触发器-->
                    <ControlTemplate.Triggers>
                        <!--鼠标移入移出-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="6" Duration="0:0:0.2" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                        <ColorAnimation To="#AFFF" BeginTime="0:0:0.2" Duration="0:0:0.2" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                        <ColorAnimation To="#3FFF" BeginTime="0:0:0.2" Duration="0:0:0.2" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                        <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                        <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <!--按钮按下弹起-->
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="3" Duration="0:0:0.1" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                        <ColorAnimation To="#3AAA" Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                        <ColorAnimation To="#2111" Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                        <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                        <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <!--按钮失效-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#B444"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="0" Duration="0:0:0.3" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                        <DoubleAnimation To="1" Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Opacity)" />
                                        <DoubleAnimation To="-135" Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Direction)" />
                                        <ColorAnimation To="#FFF" Duration="0:0:0.3" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Color)" />
                                        <ColorAnimation To="#D555" Duration="0:0:0.3" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" />
                                        <ColorAnimation To="#CEEE" Duration="0:0:0.3" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                        <ColorAnimation To="#CDDD" Duration="0:0:0.3" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                        <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Opacity)" />
                                        <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Direction)" />
                                        <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Color)" />
                                        <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" />
                                        <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                        <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button" BasedOn="{StaticResource GoodButton}">
        <Setter Property="MaxHeight" Value="22"></Setter>
    </Style>
    <!--大路单按钮样式-->
    <Style x:Key="BigWaybillButton" TargetType="Button">
        <Setter Property="Width" Value="20.5"></Setter>
        <Setter Property="Height" Value="20.5"></Setter>
        <Setter Property="FontFamily" Value="宋体"></Setter>
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>

        <Setter Property="Background" >
            <Setter.Value>
                <Binding Path="." Converter="{StaticResource WayBillBackgroundConverter}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Content" >
            <Setter.Value>
                <Binding Path="." Converter="{StaticResource WayBillContentConverter}"></Binding>
            </Setter.Value>
        </Setter>

        <Setter Property="Visibility" >
            <Setter.Value>
                <Binding Path="." Converter="{StaticResource WayBillVisibleConverter}"></Binding>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" 
                            BorderThickness="0" BorderBrush="Black" 
                            x:Name="waybillBorder">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1"/>
                            <Setter Property="BorderThickness" Value="1"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="BorderThickness" Value="0"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Button.Opacity" Value="0.5" />
            </Trigger>
        </Style.Triggers>-->
    </Style>
    <Style x:Key="ColorButton" TargetType="Button">
        <Setter Property="Foreground" Value="Black"/>
        <!--<Setter Property="MinHeight" Value="24" />-->
        <!--修改模板属性-->
        <Setter Property="Template">
            <Setter.Value>
                <!--控件模板-->
                <ControlTemplate TargetType="Button">
                    <!--背景色-->
                    <Border x:Name="back" Opacity="0.8" CornerRadius="3">
                        <Border.BitmapEffect>
                            <OuterGlowBitmapEffect Opacity="0.7" GlowSize="0" GlowColor="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Button.Background).(SolidColorBrush.Color)}" />
                        </Border.BitmapEffect>
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1.5">
                                <GradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Button.Background).(SolidColorBrush.Color)}" Offset="0"/>
                                        <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Button.Background).(SolidColorBrush.Color)}" Offset="0.4"/>
                                        <GradientStop Color="#FFF" Offset="1"/>
                                    </GradientStopCollection>
                                </GradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.Background>
                        <!--前景色及边框-->
                        <Border x:Name="fore" BorderThickness="1" CornerRadius="3" BorderBrush="#5555">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="#6FFF" Offset="0.5"/>
                                            <GradientStop Color="#1111" Offset="0.51"/>
                                        </GradientStopCollection>
                                    </GradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <!--按钮内容-->
                            <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding  Content}">
                                <ContentPresenter.BitmapEffect>
                                    <DropShadowBitmapEffect Color="#000" Direction="-90" ShadowDepth="2" Softness="0.1" Opacity="0.3" />
                                </ContentPresenter.BitmapEffect>
                            </ContentPresenter>
                        </Border>
                    </Border>
                    <!--触发器-->
                    <ControlTemplate.Triggers>
                        <!--鼠标移入移出-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="6" Duration="0:0:0.2" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                        <ColorAnimation To="#AFFF" BeginTime="0:0:0.2" Duration="0:0:0.2" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                        <ColorAnimation To="#3FFF" BeginTime="0:0:0.2" Duration="0:0:0.2" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                        <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                        <ColorAnimation Duration="0:0:0.2" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <!--按钮按下弹起-->
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="3" Duration="0:0:0.1" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                        <ColorAnimation To="#3AAA" Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                        <ColorAnimation To="#2111" Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                        <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                        <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <!--按钮失效-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#B444"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="0" Duration="0:0:0.3" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                        <DoubleAnimation To="1" Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Opacity)" />
                                        <DoubleAnimation To="-135" Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Direction)" />
                                        <ColorAnimation To="#FFF" Duration="0:0:0.3" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Color)" />
                                        <ColorAnimation To="#D555" Duration="0:0:0.3" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" />
                                        <ColorAnimation To="#CEEE" Duration="0:0:0.3" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                        <ColorAnimation To="#CDDD" Duration="0:0:0.3" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="back" Storyboard.TargetProperty="(Border.BitmapEffect).(OuterGlowBitmapEffect.GlowSize)" />
                                        <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Opacity)" />
                                        <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Direction)" />
                                        <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="(ContentPresenter.BitmapEffect).(DropShadowBitmapEffect.Color)" />
                                        <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" />
                                        <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)" />
                                        <ColorAnimation Duration="0:0:0.1" Storyboard.TargetName="fore" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BetRecordSmallWaybillButton" TargetType="Button">
        <Setter Property="Width" Value="16"></Setter>
        <Setter Property="Height" Value="16"></Setter>
        <!--<Setter Property="Margin" Value="1"></Setter>-->
        <Setter Property="FontFamily" Value="隶书"></Setter>
        <!--<Setter Property="FontSize" Value="17"></Setter>-->
        <Setter Property="FontWeight" Value="ExtraBold"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <!--<Setter Property="Content" Value="big"></Setter>-->
        <Setter Property="Content">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource BetRecordSmallContentConverter}">
                    <Binding Path="DeskBanker"></Binding>
                    <Binding Path="DeskTie"></Binding>
                    <Binding Path="DeskPlayer"></Binding>
                    <Binding Path="Winner"></Binding>
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" CornerRadius="0" 
                                BorderThickness="0" 
                                >
                            <ContentPresenter Name="BtnContent" Height="16" Width="16"
											  HorizontalAlignment="Center"
             TextBlock.TextAlignment="Center" Margin="0,-7,0,0"
             VerticalAlignment="Center" TextBlock.FontSize="18"
											  Content="{TemplateBinding Content}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" >
            <Setter.Value>
                <Binding Path="Winner" Converter="{StaticResource WayBillBackgroundConverter}" />
            </Setter.Value>
        </Setter>
        <!--<Setter Property="Visibility" >
            <Setter.Value>
                <Binding Path="." Converter="{StaticResource WayBillVisibleConverter}" />
            </Setter.Value>
        </Setter>-->
    </Style>
    <Style x:Key="BetRecordBigWaybillBlock" TargetType="Button">
        <Setter Property="Width" Value="60"></Setter>
        <Setter Property="Height" Value="60"></Setter>
        <Setter Property="FontFamily" Value="隶书"></Setter>
        <Setter Property="FontSize" Value="18"></Setter>
        <Setter Property="FontWeight" Value="UltraBold"></Setter>
        <Setter Property="Margin" Value="1"></Setter>
        <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Stretch"></Setter>
        <Setter Property="TextBlock.TextAlignment" Value="Left"></Setter>
        <!--<Setter Property="Content" Value="jfkdjdkl" ></Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                 <Binding Path="Winner" Converter="{StaticResource WayBillBackgroundConverter}" />
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="3" ></Setter>-->

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Background="White" CornerRadius="6" 
                                BorderThickness="3" >
                            <Border.BorderBrush>
                                <Binding Path="Winner" Converter="{StaticResource WayBillBackgroundConverter}" />
                            </Border.BorderBrush>
                            <StackPanel Margin="2,0,0,2" Orientation="Vertical">
                                <TextBlock Height="18" Text="{Binding  DeskBanker }" Foreground="Red" FontStretch="Medium"></TextBlock>
                                <TextBlock Height="18" Text="{Binding  DeskTie}" Foreground="Green"></TextBlock>
                                <TextBlock Height="18" Text="{Binding  DeskPlayer}" Foreground="Blue"></TextBlock>
                            </StackPanel>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="Content" >
            <Setter.Value>
                <Binding Path="Winner" Converter="{StaticResource WayBillContentConverter}"></Binding>
            </Setter.Value>
        </Setter>-->
        <!--<Setter Property="Visibility" >
            <Setter.Value>
                <Binding Path="." Converter="{StaticResource WayBillVisibleConverter}"></Binding>
            </Setter.Value>
        </Setter>-->
    </Style>
</ResourceDictionary>